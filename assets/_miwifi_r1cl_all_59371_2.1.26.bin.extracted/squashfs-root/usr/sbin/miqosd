#!/bin/sh
#
# apply simply qos rule for R1CL
#

#set -x

action=$1
TC=/usr/sbin/tc
PROTO=`uci -q get network.wan.proto`
DEVS="br-lan"

#check if br-guest
GUEST=`uci -q get network.guest.type`
if [ "$GUEST" = "bridge" ]; then
    DEVS="$DEVS br-guest"
fi

#check if pppoe or dhcp/static
if [ "$PROTO" = "pppoe" ]; then
    DEVS="$DEVS pppoe-wan"
else
    DEVS="$DEVS eth0.2"
fi

SPECIAL_FPRIO=1

#messagagent
CLASS1="0x00010000/0x000f0000"
FPRIO1=2

#host-high
CLASS2="0x00130000/0x00ff0000"
FPRIO2=3

#host-web
CLASS3="0x00230000/0x00ff0000"
FPRIO3=3

#host-video
CLASS4="0x00330000/0x00ff0000"
FPRIO4=3

#host-other
CLASS5="0x00030000/0x000f0000"
FPRIO5=4

#guest
CLASS6="0x00040000/0x000f0000"
FPRIO6=4


qos_clean()
{
    for dev in $DEVS
    do
        $TC qdisc del dev $dev root
    done
}

qos_apply()
{
    for dev in $DEVS
    do
        # qdisc root
        $TC qdisc add dev $dev root handle 1: prio bands 6 priomap 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

        $TC qdisc add dev $dev parent 1:1 fq_codel limit 1024 flows 1024 target 5ms interval 50ms
        $TC qdisc add dev $dev parent 1:2 fq_codel limit 1024 flows 1024 target 5ms interval 50ms
        $TC qdisc add dev $dev parent 1:3 fq_codel limit 1024 flows 1024 target 5ms interval 50ms
        $TC qdisc add dev $dev parent 1:4 fq_codel limit 1024 flows 1024 target 5ms interval 50ms
        $TC qdisc add dev $dev parent 1:5 fq_codel limit 1024 flows 1024 target 5ms interval 50ms
        $TC qdisc add dev $dev parent 1:6 fq_codel limit 1024 flows 1024 target 5ms interval 50ms

        # qdisc filter
        $TC filter add dev $dev parent 1: prio $FPRIO1 handle $CLASS1 fw classid 1:1
        $TC filter add dev $dev parent 1: prio $FPRIO2 handle $CLASS2 fw classid 1:2
        $TC filter add dev $dev parent 1: prio $FPRIO3 handle $CLASS3 fw classid 1:3
        $TC filter add dev $dev parent 1: prio $FPRIO4 handle $CLASS4 fw classid 1:4
        $TC filter add dev $dev parent 1: prio $FPRIO5 handle $CLASS5 fw classid 1:5
        $TC filter add dev $dev parent 1: prio $FPRIO6 handle $CLASS6 fw classid 1:6

        # other filter
        # SYN
        $TC filter add dev $dev parent 1: prio $SPECIAL_FPRIO proto ip u32 \
        match ip protocol 6 0xff \
        match u8 0x05 0x0f at 0 \
        match u8 0x02 0x02 at 33 \
        flowid 1:1

        # FIN
        $TC filter add dev $dev parent 1: prio $SPECIAL_FPRIO proto ip u32 \
        match ip protocol 6 0xff \
        match u8 0x05 0x0f at 0 \
        match u8 0x01 0x01 at 33 \
        flowid 1:1

        # RST
        $TC filter add dev $dev parent 1: prio $SPECIAL_FPRIO proto ip u32 \
        match ip protocol 6 0xff \
        match u8 0x05 0x0f at 0 \
        match u8 0x04 0x04 at 33 \
        flowid 1:1

        #ICMP
        $TC filter add dev $dev parent 1: prio $SPECIAL_FPRIO proto ip u32 \
        match ip protocol 1 0xff \
        flowid 1:1

        #Small
        $TC filter add dev $dev parent 1: prio $SPECIAL_FPRIO proto ip u32 \
        match ip protocol 6 0xff \
        match u16 0x0000 0xffc0 at 2 \
        flowid 1:1

    done
}

#clean 1stly
qos_clean

#then apply new rule if action is on
[ "$action" = "on" ] && {
    qos_apply
}


